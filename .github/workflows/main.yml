name: CI/CD Flask + MySQL Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 3️⃣ Build & Push Docker image (tag with SHA + latest)
      - name: Build & Push Docker Image
        run: |
          IMAGE_TAG=${{ secrets.DOCKERHUB_USER }}/bsf-attendence:${GITHUB_SHA}
          LATEST_TAG=${{ secrets.DOCKERHUB_USER }}/bsf-attendence:latest
          echo "Building Docker image: $IMAGE_TAG"

          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG

          echo "Tagging as latest..."
          docker tag $IMAGE_TAG $LATEST_TAG
          docker push $LATEST_TAG

          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      # 4️⃣ Deploy to EC2 + DB migration
      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/bsf-attendence

            echo "Pulling latest Docker image..."
            docker pull $LATEST_TAG

            echo "Stopping old containers..."
            docker-compose down

            echo "Starting new containers with new image..."
            docker-compose up -d --force-recreate

            echo "Waiting for MySQL to be ready..."
            until docker exec flask_mysql_db mysqladmin ping -h "localhost" --silent; do
              sleep 2
            done

            # ✅ Run migration if SQL file exists
            if [ -f "./bsfattendence.sql" ]; then
              echo "Applying DB migration..."
              docker exec -i flask_mysql_db mysql -u newuser -p123 bsfattendence < bsfattendence.sql
              echo "DB migration completed ✅"
            else
              echo "No DB migration file found. Skipping migration."
            fi

            echo "Cleaning unused images..."
            docker image prune -f
